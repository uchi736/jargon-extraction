{
  "permissions": {
    "allow": [
      "Bash(git remote set-url:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(myenv\\Scripts\\pip.exe install:*)",
      "Bash(./myenv/Scripts/pip.exe install scikit-learn)",
      "Bash(python:*)",
      "Bash(myenv/Scripts/python.exe -m pip install:*)",
      "Bash(myenv/Scripts/python.exe wakachigaki_comparison.py:*)",
      "Bash(myenv/Scripts/python.exe test_azure_embedding.py:*)",
      "Bash(myenv/Scripts/python.exe test_legal_text.py:*)",
      "Bash(myenv/Scripts/python.exe sudachi_custom_tokenizer.py:*)",
      "Bash(cp:*)",
      "Bash(rm:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(myenvScriptspython.exe jargon_extractor.py:*)",
      "Bash(\"myenv\\Scripts\\python.exe\" jargon_extractor.py test_input.txt --pilot)",
      "Bash(myenvScriptspip.exe install PyMuPDF)",
      "Bash(\"myenv\\Scripts\\pip.exe\" install PyMuPDF)",
      "Bash(myenv/Scripts/pip.exe install PyMuPDF)",
      "Bash(\"C:\\work\\RAG\\Jargon\\myenv\\Scripts\\pip.exe\" install PyMuPDF)",
      "Bash(\"myenv\\Scripts\\python.exe\":*)",
      "Bash(dir:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(\"myenv\\Scripts\\pip.exe\" install tiktoken)",
      "Bash(myenvScriptspip.exe install tiktoken)",
      "Bash(C:workRAGJargonmyenvScriptspip.exe install tiktoken)",
      "Bash(\"C:\\work\\RAG\\Jargon\\myenv\\Scripts\\pip.exe\" install tiktoken)",
      "Read(/C:\\work\\RAG\\Jargon\\examples/**)",
      "Read(/C:\\work\\RAG\\Jargon/**)",
      "Read(/C:\\work\\RAG\\Jargon\\src\\extraction/**)",
      "Read(/C:\\work\\RAG\\Jargon\\src\\core/**)",
      "Read(/C:\\work\\RAG\\Jargon\\src\\evaluation/**)",
      "Read(/C:\\work\\RAG\\Jargon\\src\\core/**)",
      "Bash(tree:*)",
      "Bash(for dir in src src/core src/evaluation src/extraction src/utils tests tests/test_data examples logs input output docs old)",
      "Bash(do echo \"=== $dir ===\")",
      "Bash(ls:*)",
      "Bash(done)",
      "Bash(awk:*)",
      "mcp__serena__search_for_pattern",
      "mcp__serena__activate_project"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "C:\\mnt\\c\\work\\RAG"
    ]
  },
  "enabledMcpjsonServers": [
    "context7",
    "sequential-thinking",
    "serena"
  ]
}